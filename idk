-- Local references
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local rootPart = character:WaitForChild("HumanoidRootPart")

-- GUI Setup
local screenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
screenGui.Name = "CoreX Hub"
screenGui.ResetOnSpawn = false

-- Main Frame
local frame = Instance.new("Frame", screenGui)
frame.Size = UDim2.new(0, 250, 0, 350)
frame.Position = UDim2.new(0.5, -125, 0.5, -175)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.Active = true
frame.Draggable = true
frame.Visible = true

-- Tabs
local tabBar = Instance.new("Frame", frame)
tabBar.Size = UDim2.new(1, 0, 0, 30)
tabBar.Position = UDim2.new(0, 0, 0, 0)
tabBar.BackgroundColor3 = Color3.fromRGB(45, 45, 45)

local function createTabButton(name, position)
	local btn = Instance.new("TextButton", tabBar)
	btn.Size = UDim2.new(0, 80, 1, 0)
	btn.Position = UDim2.new(0, position, 0, 0)
	btn.Text = name
	btn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
	btn.TextColor3 = Color3.new(1, 1, 1)
	btn.Font = Enum.Font.SourceSansBold
	btn.TextSize = 16
	return btn
end

local playerTabBtn = createTabButton("Player", 0)
local visualTabBtn = createTabButton("Visual", 85)
local audioTabBtn = createTabButton("Audio", 170)

-- Content Holder
local contentFrame = Instance.new("Frame", frame)
contentFrame.Size = UDim2.new(1, 0, 1, -30)
contentFrame.Position = UDim2.new(0, 0, 0, 30)
contentFrame.BackgroundTransparency = 1

-- Helper to create content pages
local function createPage()
	local page = Instance.new("Frame")
	page.Size = UDim2.new(1, 0, 1, 0)
	page.BackgroundTransparency = 1
	page.Visible = false
	page.Parent = contentFrame
	return page
end

local playerPage = createPage()
local visualPage = createPage()
local audioPage = createPage()

-- Toggle page visibility
local function switchTo(page)
	playerPage.Visible = false
	visualPage.Visible = false
	audioPage.Visible = false
	page.Visible = true
end

playerTabBtn.MouseButton1Click:Connect(function() switchTo(playerPage) end)
visualTabBtn.MouseButton1Click:Connect(function() switchTo(visualPage) end)
audioTabBtn.MouseButton1Click:Connect(function() switchTo(audioPage) end)
switchTo(playerPage)

-- ========== PLAYER TAB ==========
-- Speed
local speeds = {16, 32, 50, 100}
local index = 1
local speedBtn = Instance.new("TextButton", playerPage)
speedBtn.Size = UDim2.new(0, 200, 0, 30)
speedBtn.Position = UDim2.new(0, 25, 0, 10)
speedBtn.Text = "Speed: 16"
speedBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
speedBtn.TextColor3 = Color3.new(1, 1, 1)
speedBtn.Font = Enum.Font.SourceSans
speedBtn.TextSize = 18

speedBtn.MouseButton1Click:Connect(function()
	index = (index % #speeds) + 1
	local speed = speeds[index]
	speedBtn.Text = "Speed: " .. speed
	humanoid.WalkSpeed = speed
end)

-- God Mode
local godMode = false
local godBtn = Instance.new("TextButton", playerPage)
godBtn.Size = UDim2.new(0, 200, 0, 30)
godBtn.Position = UDim2.new(0, 25, 0, 50)
godBtn.Text = "God Mode: OFF"
godBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
godBtn.TextColor3 = Color3.new(1, 1, 1)
godBtn.Font = Enum.Font.SourceSans
godBtn.TextSize = 18

task.spawn(function()
	while true do
		if godMode and humanoid then
			pcall(function()
				if humanoid.Health < humanoid.MaxHealth then
					humanoid.Health = humanoid.MaxHealth
				end
			end)
		end
		task.wait(0.1)
	end
end)

godBtn.MouseButton1Click:Connect(function()
	godMode = not godMode
	godBtn.Text = "God Mode: " .. (godMode and "ON" or "OFF")
end)

-- Helicopter Mode
local heliBtn = Instance.new("TextButton", playerPage)
heliBtn.Size = UDim2.new(0, 200, 0, 30)
heliBtn.Position = UDim2.new(0, 25, 0, 90)
heliBtn.Text = "Helicopter: OFF"
heliBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
heliBtn.TextColor3 = Color3.new(1, 1, 1)
heliBtn.Font = Enum.Font.SourceSans
heliBtn.TextSize = 18

local helicopterEnabled = false
local bodyVel = Instance.new("BodyVelocity")
bodyVel.MaxForce = Vector3.new(1e5, 1e5, 1e5)
bodyVel.Velocity = Vector3.new(0, 50, 0)

local crawlAnim = Instance.new("Animation")
crawlAnim.AnimationId = "rbxassetid://616006778"
local crawlTrack = humanoid:LoadAnimation(crawlAnim)

heliBtn.MouseButton1Click:Connect(function()
	helicopterEnabled = not helicopterEnabled
	heliBtn.Text = "Helicopter: " .. (helicopterEnabled and "ON" or "OFF")
	if helicopterEnabled then
		bodyVel.Parent = rootPart
		crawlTrack:Play()
	else
		bodyVel.Parent = nil
		crawlTrack:Stop()
	end
end)

player.CharacterAdded:Connect(function(char)
	character = char
	humanoid = char:WaitForChild("Humanoid")
	rootPart = char:WaitForChild("HumanoidRootPart")
	bodyVel = Instance.new("BodyVelocity")
	bodyVel.MaxForce = Vector3.new(1e5, 1e5, 1e5)
	bodyVel.Velocity = Vector3.new(0, 50, 0)
	crawlTrack = humanoid:LoadAnimation(crawlAnim)
	humanoid.WalkSpeed = speeds[index]
end)

-- ========== VISUAL TAB ==========
local espEnabled = false
local highlights = {}
local hue = 0

local espBtn = Instance.new("TextButton", visualPage)
espBtn.Size = UDim2.new(0, 200, 0, 30)
espBtn.Position = UDim2.new(0, 25, 0, 10)
espBtn.Text = "ESP: OFF"
espBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
espBtn.TextColor3 = Color3.new(1, 1, 1)
espBtn.Font = Enum.Font.SourceSans
espBtn.TextSize = 18

local function createESP(targetPlayer)
	if targetPlayer == player or highlights[targetPlayer] then return end
	local char = targetPlayer.Character
	if not char then return end
	local highlight = Instance.new("Highlight")
	highlight.Adornee = char
	highlight.FillTransparency = 0.5
	highlight.OutlineTransparency = 0
	highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
	highlight.Parent = char
	highlights[targetPlayer] = highlight
end

local function removeESP(targetPlayer)
	if highlights[targetPlayer] then
		highlights[targetPlayer]:Destroy()
		highlights[targetPlayer] = nil
	end
end

espBtn.MouseButton1Click:Connect(function()
	espEnabled = not espEnabled
	espBtn.Text = "ESP: " .. (espEnabled and "ON" or "OFF")
	for _, p in pairs(game.Players:GetPlayers()) do
		if espEnabled then createESP(p) else removeESP(p) end
	end
end)

task.spawn(function()
	while true do
		if espEnabled then
			hue = (hue + 0.01) % 1
			for _, h in pairs(highlights) do
				h.FillColor = Color3.fromHSV(hue, 1, 1)
				h.OutlineColor = Color3.fromHSV((hue + 0.5) % 1, 1, 1)
			end
		end
		task.wait(0.05)
	end
end)

game.Players.PlayerAdded:Connect(function(p)
	p.CharacterAdded:Connect(function()
		if espEnabled then task.wait(1) createESP(p) end
	end)
end)
game.Players.PlayerRemoving:Connect(removeESP)

-- ========== AUDIO TAB ==========
local musicSound = Instance.new("Sound", workspace)
musicSound.Looped = true
musicSound.Volume = 1
local musicEnabled = false

local musicToggle = Instance.new("TextButton", audioPage)
musicToggle.Size = UDim2.new(0, 200, 0, 30)
musicToggle.Position = UDim2.new(0, 25, 0, 10)
musicToggle.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
musicToggle.TextColor3 = Color3.new(1, 1, 1)
musicToggle.Font = Enum.Font.SourceSans
musicToggle.TextSize = 18
musicToggle.Text = "Music: OFF"

local musicInput = Instance.new("TextBox", audioPage)
musicInput.Size = UDim2.new(0, 200, 0, 30)
musicInput.Position = UDim2.new(0, 25, 0, 50)
musicInput.PlaceholderText = "Enter Sound ID"
musicInput.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
musicInput.TextColor3 = Color3.new(1, 1, 1)
musicInput.Font = Enum.Font.SourceSans
musicInput.TextSize = 18
musicInput.Text = ""
musicInput.Visible = false

local playBtn = Instance.new("TextButton", audioPage)
playBtn.Size = UDim2.new(0, 200, 0, 30)
playBtn.Position = UDim2.new(0, 25, 0, 90)
playBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
playBtn.TextColor3 = Color3.new(1, 1, 1)
playBtn.Font = Enum.Font.SourceSans
playBtn.TextSize = 18
playBtn.Text = "Play Music"
playBtn.Visible = false

musicToggle.MouseButton1Click:Connect(function()
	musicEnabled = not musicEnabled
	musicToggle.Text = "Music: " .. (musicEnabled and "ON" or "OFF")
	musicInput.Visible = musicEnabled
	playBtn.Visible = musicEnabled
	if not musicEnabled then musicSound:Stop() end
end)

playBtn.MouseButton1Click:Connect(function()
	local id = musicInput.Text:match("%d+")
	if id then
		musicSound.SoundId = "rbxassetid://" .. id
		musicSound:Play()
	end
end)
